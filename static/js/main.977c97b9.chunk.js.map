{"version":3,"sources":["components/Navbar.jsx","components/Footer.jsx","components/Graph.jsx","components/CurrentPrice.jsx","components/Content.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","title","type","onClick","halfmoon","toggleDarkMode","width","height","viewBox","fill","xmlns","d","fillRule","Footer","role","style","Graph","useState","data","setData","lineGraph","setLineGraph","a","localData","localStorage","JSON","parse","Date","toISOString","getTime","time","updatedISO","returnData","console","log","nowDate","moment","format","oldDate","subtract","fetch","response","json","apidata","stringify","bpi","ret","i","push","year","price","useEffect","getPrices","id","onChange","value","htmlFor","strokeDasharray","dataKey","name","stroke","activeDot","r","verticalAlign","wrapperStyle","lineHeight","y","CurrentPrice","setPrice","lastUpdated","setLastUpdated","getCurrentPrice","current","INR","rate","setTimeout","clearInterval","marginTop","styles","paddingLeft","Content","App","onDOMContentLoaded","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.977c97b9.chunk.js","sourcesContent":["import React from 'react';\nimport halfmoon from 'halfmoon';\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar justify-content-between\">\n      <a\n        href=\"#0\"\n        className=\"navbar-brand font-italic font-weight-bolder font-size-24\"\n      >\n        BITCOIN PRICES\n      </a>\n      <div className=\"navbar-content\">\n        <button\n          title=\"Toggle Dark Mode\"\n          className=\"btn btn-sm\"\n          type=\"button\"\n          onClick={() => halfmoon.toggleDarkMode()}\n        >\n          <svg\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 16 16\"\n            className=\"bi bi-brightness-high-fill\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M12 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0z\" />\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\"\n            />\n          </svg>\n        </button>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <nav className=\"navbar navbar-fixed-bottom container-fluid\">\n      <div className=\"row w-full\">\n        <div className=\"col-5 text-left\">\n          <p className=\"font-size-18 m-10\">Â© RaulShma</p>\n        </div>\n        <div className=\"col-2 d-flex justify-content-center align-items-center\">\n          <a\n            href=\"https://github.com/raulshma/bitcoin-price-chart\"\n            className=\"mr-20\"\n            title=\"Repository\"\n          >\n            <svg\n              role=\"img\"\n              viewBox=\"0 0 24 24\"\n              style={{ width: '2.3rem' }}\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n            </svg>\n          </a>\n          <a href=\"https://twitter.com/raulshma\" title=\"Twitter\">\n            <svg\n              role=\"img\"\n              viewBox=\"0 0 24 24\"\n              style={{ width: '2.3rem' }}\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\" />\n            </svg>\n          </a>\n        </div>\n        <div className=\"col-5 text-right\">\n          <p className=\"m-10\">\n            Powered by{' '}\n            <a href=\"https://www.coindesk.com/price/bitcoin\">CoinDesk</a>\n          </p>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport {\n  ResponsiveContainer,\n  LineChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Line,\n  Legend,\n  BarChart,\n  Bar,\n  Brush,\n  ReferenceLine,\n} from 'recharts';\n\nfunction Graph() {\n  const [data, setData] = useState([]);\n  const [lineGraph, setLineGraph] = useState(true);\n  async function getPrices() {\n    const localData = localStorage.data && JSON.parse(localStorage.data);\n    if (\n      localData &&\n      new Date(new Date().toISOString()).getTime() -\n        new Date(localData.time.updatedISO).getTime() <\n        86400000 + 360000\n    ) {\n      returnData(localData);\n      return;\n    }\n    console.log(\n      '%c Fetching New Graph Prices',\n      'color: orange; font-weight: bold;'\n    );\n    const nowDate = moment().format('yyyy-MM-DD');\n    const oldDate = moment(nowDate).subtract(1, 'M').format('yyyy-MM-DD');\n    const response = await fetch(\n      `https://api.coindesk.com/v1/bpi/historical/INR.json?start=${oldDate}&end=${nowDate}`\n    );\n    const apidata = await response.json();\n    localStorage.data = JSON.stringify(apidata);\n    returnData(apidata);\n  }\n  const returnData = ({ bpi }) => {\n    const ret = [];\n    for (let i in bpi) {\n      ret.push({ year: i, price: bpi[i] });\n    }\n    setData(ret);\n  };\n  useEffect(() => {\n    getPrices();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-end\">\n        <div className=\"custom-switch\">\n          <input\n            type=\"checkbox\"\n            id=\"switch-graph\"\n            onChange={() => setLineGraph(!lineGraph)}\n            value={lineGraph}\n          />\n          <label htmlFor=\"switch-graph\">Bar Chart</label>\n        </div>\n      </div>\n      <ResponsiveContainer>\n        {lineGraph ? (\n          <LineChart data={data}>\n            <CartesianGrid strokeDasharray=\"2 2\" />\n            <XAxis dataKey=\"year\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"price\"\n              name=\"Price\"\n              stroke=\"#8884d8\"\n              activeDot={{ r: 6 }}\n            />\n          </LineChart>\n        ) : (\n          <BarChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"year\" />\n            <YAxis />\n            <Tooltip />\n            <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n            <ReferenceLine y={0} stroke=\"#000\" />\n            <Brush dataKey=\"year\" height={20} stroke=\"#8884d8\" />\n            <Bar dataKey=\"price\" fill=\"#8884d8\" />\n          </BarChart>\n        )}\n      </ResponsiveContainer>\n    </>\n  );\n}\n\nexport default Graph;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nfunction CurrentPrice() {\n  const [price, setPrice] = useState('');\n  const [lastUpdated, setLastUpdated] = useState(moment().format('h:mm a'));\n\n  async function getCurrentPrice() {\n    const localData = localStorage.current && JSON.parse(localStorage.current);\n    if (\n      localData &&\n      new Date(new Date().toISOString()).getTime() -\n        new Date(localData.time.updatedISO).getTime() <\n        60000\n    ) {\n      const {\n        INR: { rate: price },\n      } = localData.bpi;\n      setPrice(price);\n      return;\n    }\n    setLastUpdated(moment().format('h:mm a'));\n    console.log(\n      `%c Fetching New Current Price %c ${lastUpdated}`,\n      'color: green; font-weight: bold;',\n      'color: white; font-weight: bolder;'\n    );\n    const response = await fetch(\n      'https://api.coindesk.com/v1/bpi/currentprice/INR.json'\n    );\n    const data = await response.json();\n    localStorage.current = JSON.stringify(data);\n    const {\n      INR: { rate: price },\n    } = data.bpi;\n    setPrice(price);\n  }\n  useEffect(() => {\n    getCurrentPrice();\n    const id = setTimeout(() => {\n      getCurrentPrice();\n    }, 61000);\n    return () => {\n      clearInterval(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div className=\"pt-20 mt-20 d-flex flex-column justify-content-center text-center\">\n      <h1 className=\"font-size-20 font-weight-bold mb-0\">\n        1 &#8383; = &#8377; {price}\n      </h1>\n      <small style={{ marginTop: '3px' }}>Last updated at {lastUpdated}</small>\n    </div>\n  );\n}\n\nexport default CurrentPrice;\n","import React from 'react';\nimport Graph from './Graph';\nimport CurrentPrice from './CurrentPrice';\n\nconst styles = { height: '77vh', paddingLeft: 0 };\n\nfunction Content() {\n  return (\n    <div className=\"container p-10 d-flex flex-column justify-content-center\">\n      <CurrentPrice />\n      <div className=\"container\" style={styles}>\n        <Graph />\n      </div>\n    </div>\n  );\n}\n\nexport default Content;\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Content from './components/Content';\nimport halfmoon from 'halfmoon';\n\nfunction App() {\n  halfmoon.onDOMContentLoaded();\n  return (\n    <div className=\"page-wrapper with-sidebar with-navbar with-navbar-fixed-bottom with-transitions\">\n      <Navbar />\n      <Content />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport '../node_modules/halfmoon/css/halfmoon.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}